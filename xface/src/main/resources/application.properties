# ThymeLeaf
spring.thymeleaf.cache=false
server.port=8090
#server.ssl.key-store: C:\\temp\\sp_boot_key\\keystore.p12
#server.ssl.key-store-password: 123456
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp

spring.datasource.url = jdbc:mysql://localhost:3306/xface
spring.datasource.username = xface
spring.datasource.password = 123456
spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8;
spring.datasource.sqlScriptEncoding=UTF-8


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = create


# Naming strategy
spring.jpa.hibernate.naming-strategy = com.xpand.xface.util.MyNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jackson.serialization.fail-on-empty-beans=false


spring.jackson.date-format=yyyyMMddHHmmss

liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

quartz.enabled=true

samplejob.frequency=2000

# define log
logging.level.org.springframework=ERROR
logging.level.com.xpand=DEBUG

# Logging pattern for the console
logging.pattern.console= %date{Y-m-d H:i:s,u} %logger{36} - %msg%n

# Logging pattern for file
logging.pattern.file= %date{Y-m-d H:i:s,u} [%thread] %-5level %logger{36} - %msg%n

logging.file=c:/xface/application.log


# test config
cfg1.message=eddy0055

# xface server config
xfaceserver.wait_for_stop=1
xfaceserver.wait_for_next_activity=10

spring.http.multipart.enabled=true
spring.http.multipart.max-file-size=5MB
spring.http.multipart.max-request-size=5MB